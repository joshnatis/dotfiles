#!/usr/bin/env python3

import sys

def get_max_col_lengths(df):
	lengths = []
	num_cols = len(df[0])
	for i in range(num_cols):
		lengths.append(max([len(row[i]) for row in df]))
	return lengths

def print_table(df):
	num_cols = len(df[0])
	col_widths = get_max_col_lengths(df)
	df_width = sum(col_widths) + 1 + num_cols

	header = True

	print_border(df_width, col_widths)
	for row in df:
		print("|",end="")
		for i in range(len(row)):
			print(row[i].ljust(col_widths[i])+"|", end="")
		print("")

		if header:
			print_border(df_width, col_widths)
			header = False
	print_border(df_width, col_widths)

def print_border(df_width, col_widths):
	border = "-" * (df_width - 1)
	elapsed = 0
	for length in col_widths:
		elapsed += length
		border = border[:elapsed] + "+" + border[elapsed + 1:]
		elapsed += 1
	print("+" + border)

def pad_missing_columns(df):
	max_cols = len(df[0])
	for i in range(len(df)):
		if len(df[i]) < max_cols:
			df[i] += [''] * (max_cols - len(df[i]))
		elif len(df[i]) > max_cols:
			df[i] = df[i][:max_cols]

def main():
	delim = ","
	if len(sys.argv) < 2:
		print("Usage:", sys.argv[0], "<file> [optional delimiter]")
		exit(1)
	elif len(sys.argv) == 3:
		delim = sys.argv[2]

	df = []
	try:
		with open(sys.argv[1],'r') as f:
			for row in f:
				columns = [(" " + col.strip() + " ") for col in row.split(delim)]
				df.append(columns)

			pad_missing_columns(df)
			print_table(df)

	except IndexError:
		print("IndexError: make sure your fields don't have a '" + delim + "' within them.")
	except OSError:
		print("Unable to open the file", sys.argv[1])

main()
